name: MessengerApp CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Debug
  BUILD_PATH: ${{github.workspace}}/build

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libboost-all-dev libssl-dev lcov gcovr qt6-base-dev

    - name: CMake setup
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.22.1'
    
    - name: CMake configuration
      run: cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_GUI=OFF -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage"

    - name: Project build
      run: cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}
    
    - name: Debug - List build directory
      run: |
        echo "=== Build directory structure ==="
        ls -la ${{env.BUILD_PATH}}/
        echo "=== libmessenger directory ==="
        ls -la ${{env.BUILD_PATH}}/libmessenger/
        echo "=== libmessenger/tests directory ==="
        ls -la ${{env.BUILD_PATH}}/libmessenger/tests/
        echo "=== Looking for test executables ==="
        find ${{env.BUILD_PATH}} -type f -executable -name "*test*" -o -name "*ut*"
    
    - name: Run tests
      working-directory: ${{env.BUILD_PATH}}
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --verbose

    - name: Generate code coverage report
      working-directory: ${{env.BUILD_PATH}}
      run: |
        gcovr -r .. --exclude '.*[Tt]ests.*' --exclude '.*_deps.*' --exclude '.*CMakeFiles.*' --exclude '.*CompilerIdCXX.*' --exclude '.*/gui/.*' --filter '.*libmessenger/src/.*\.cpp' --xml-pretty --output coverage.xml
        gcovr -r .. --exclude '.*[Tt]ests.*' --exclude '.*_deps.*' --exclude '.*CMakeFiles.*' --exclude '.*CompilerIdCXX.*' --exclude '.*/gui/.*' --filter '.*libmessenger/src/.*\.cpp' --html --html-details -o coverage.html

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ${{env.BUILD_PATH}}/coverage.html
